import { Box, VStack, Text, chakra } from "@chakra-ui/react";
import Head from "next/head";
import ServiceBanner from "./../@components/servicePage/serviceBanner";
import Skills from "./../@components/servicePage/skills";
import { StepsData, Servdata, Techs } from "../config/data";
import Technologies from "../@components/servicePage/technologies";
import ContactUs from "../@components/contact/ContactUs";
import Steps from "../@components/servicePage/steps";
import "react-multi-carousel/lib/styles.css";
import client from "../apollo-client";
import { footer, homeData, navbar, service } from "./../graphql/queries";
const Services = (props: any) => {
  const { attributes: data } = props.service;
  return (
    <Box>
      <Head>
        <title>Serices ASAP</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <ServiceBanner
        quoteBy={data?.banner?.quoteBy}
        quoteText={data?.banner?.quoteText}
        image={data?.banner?.image?.data?.attributes?.url}
        quoteIcon={data?.banner?.quoteIcon?.data?.attributes?.url}
      />

      <Box my={36}>
        <VStack>
          <Box w={{ md: "50%", base: "80%" }}>
            <Text
              lineHeight={{ md: 1.2, base: 1.5 }}
              textAlign="center"
              fontSize={28}
              fontWeight={700}
              color="agray.200"
            >
              {data?.belowBannerHeading?.preHeading}
              <chakra.span
                lineHeight={0.8}
                mx={2}
                display="inline-block"
                borderBottom="5px solid"
                borderColor="ared.100"
              >
                {data?.belowBannerHeading?.underlineHeading}
              </chakra.span>
              {data?.belowBannerHeading?.postHeading}
            </Text>
          </Box>
        </VStack>
      </Box>

      {data?.skills.map((skill: any, index: any) => (
        <Skills
          key={index}
          image={skill.image?.data?.attributes?.url}
          name={skill.heading}
          text={skill.text}
          isLink={skill.isLink}
          linkText={skill.linkText}
        />
      ))}
      <Box mt={36}>
        <VStack>
          <Box>
            <Text lineHeight={1.2} textAlign="center" fontSize={40} fontWeight={700} color="agray.200">
              {data?.stepsHeading?.preHeading}{" "}
              <chakra.span lineHeight={0.8} display="inline-block" borderBottom="7px solid" borderColor="ared.100">
                {data?.stepsHeading?.underlineHeading}
              </chakra.span>{" "}
              {data?.stepsHeading?.postHeading}
            </Text>
          </Box>
        </VStack>
      </Box>

      <Steps stayTuned readyToLaunch steps={data?.steps} />

      <Technologies image={data?.technologies} />
      <Box mt={24}>
        <ContactUs
          heading={props?.home?.attributes?.contactTitle}
          text={props?.home?.attributes?.contactText}
          name={props?.home?.attributes?.contact[0].name}
          email={props?.home?.attributes?.contact[0].email}
          phone={props?.home?.attributes?.contact[0].phone}
          tellMore={props?.home?.attributes?.contact[0].tellMore}
        />
      </Box>
    </Box>
  );
};

export async function getServerSideProps() {
  const { data: navbarData } = await client.query({
    query: navbar,
  });
  const { data: serviceData } = await client.query({
    query: service,
  });
  const { data: homePageData } = await client.query({
    query: homeData,
  });
  const { data: footerData } = await client.query({
    query: footer,
  });

  return {
    props: {
      navbar: navbarData.navbar.data,
      home: homePageData.home.data,
      service: serviceData.service.data,
      footer: footerData.footer.data,
    },
  };
}

export default Services;
